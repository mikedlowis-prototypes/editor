#!/bin/bash

edit(){
    # setup editor env
    export PATH="$HOME/.config/edit/tools:$PATH"
    export EDITRCFILE="$HOME/.config/edit/editrc"
    export BASH_ENV="$EDITRCFILE"
    [[ -f "$EDITRCFILE" ]] && . "$EDITRCFILE"

    # Now figure out the correct editor to execute
    if [[ -z "$DISPLAY" ]]; then
        "$EDITOR" "$@"
    else
        # Launch in the background and disown
        { tide "$@" & disown; } &> /dev/null
    fi
}

# Tag Lines
#------------------------------------------------------------------------------

csrc(){ echo -n "Quit Save Eol rctags !term >lines |bc |uc {>Grep  } Find "; }
src(){ echo -n "Quit Save Eol rctags !term >lines |bcmt |ucmt {>Grep  } Find "; }
ptext(){ echo -n "Quit Save Eol rctags !term |fmt >words {>Grep  } Find "; }

# setup default tags line
export EDITTAGS="$(csrc)"

# Tool Functions
#------------------------------------------------------------------------------

# Launch a terminal emulator in the same dir as the editor
term(){ (nohup st)& }

# Regex search
Grep(){ grep -n "$@"; }

# Refresh ctags file
rctags(){ ctags -R --exclude="Build"; }

# Word and Line Counts
words(){ wc -w; }
lines(){ wc -l; }

# Block Comments for C and Scripting Languages
bc(){ sed -e 's/^/\/\//'; }
uc(){ sed -e 's/^\(\s*\)\/\//\1/'; }
bcmt(){ sed -e 's/^/#/'; }
ucmt(){ sed -e 's/^\(\s*\)#/\1/'; }

# Expand tabs to spaces
etabs(){ sed -e 's/\t/    /g'; }

# Add a line number to each line of the file
lnnum(){ nl -nln -ba; }

# Trim trailing whitspace
trim(){ sed -e 's/[\t ]\+$//'; }

# Hex editing functions
hex(){ xxd; }
nohex(){ xxd -r; }
